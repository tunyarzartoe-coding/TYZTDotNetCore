
@page "/blog"
@inject HttpClient httpClient

<PageTitle>Blog List</PageTitle>

<h1>Blog List</h1>

@if(_blogs is not null)
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th></th>
                <th>Id</th>
                <th>Title</th>
                <th>Author</th>
                <th>Content</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in _blogs)
            {
                var editLink = $"/blog/edit/{item.BlogId}";
                <tr>
                    <td>
                        @*  <NavLink href="@editLink" class="btn btn-outline-warning">
                Edit
                </NavLink> *@
                        @* <button type="button" @onclick="() => Edit(item.BlogId)" class="btn btn-outline-warning">Edit</button>
                <button type="button" @onclick="() => Delete(item.BlogId)" class="btn btn-outline-danger">Delete</button> *@
                    </td>
                    <td>@item.BlogId</td>
                    <td>@item.BlogTitle</td>
                    <td>@item.BlogAuthor</td>
                    <td>@item.BlogContent</td>
                </tr>
            }
        </tbody>
    </table>

}

@code {
    private List<BlogModel>? _blogs = null;

    protected override async Task OnInitializedAsync()
    {
        var response = await httpClient.GetAsync("api/Blog");
        if (response.IsSuccessStatusCode)
        {
            var jsonStr = await response.Content.ReadAsStringAsync();
            // Console.WriteLine(jsonStr);
            // json to C#

            _blogs = JsonConvert.DeserializeObject<List<BlogModel>>(jsonStr)!;
        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {

        }
        // return base.OnAfterRenderAsync(firstRender);
    }

    public class BlogModel
    {
        public int BlogId { get; set; }
        public string? BlogTitle { get; set; }
        public string? BlogAuthor { get; set; }
        public string? BlogContent { get; set; }
    }

}
